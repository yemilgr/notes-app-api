# NOTE: update this with your service name
service: notes-app-api

# Create an optimized package for our functions
package:
    individually: true

plugins:
    - serverless-bundle # Package our functions with Webpack
    - serverless-offline
    - serverless-dotenv-plugin # Load .env as environment variables

provider:
    name: aws
    runtime: nodejs10.x
    stage: prod
    region: eu-west-2
    # These environment variables are made available to our functions
    # under process.env.
    environment:
        tableName: ${env:NOTES_TABLE_NAME}
        stripeSecretKey: ${env:SRIPE_SECRET_KEY}
        stripePublicKey: ${env:SRIPE_PUBLIC_KEY}

    # 'iamRoleStatements' defines the permission policy for the Lambda function.
    # In this case Lambda functions are granted with permissions to access DynamoDB.
    iamRoleStatements:
        - Effect: Allow
          Action:
              - dynamodb:DescribeTable
              - dynamodb:Query
              - dynamodb:Scan
              - dynamodb:GetItem
              - dynamodb:PutItem
              - dynamodb:UpdateItem
              - dynamodb:DeleteItem
          Resource: 'arn:aws:dynamodb:us-west-2:*:*'

functions:
    list:
        handler: list.main
        events:
            - hhtp:
                  path: notes
                  method: GET
                  cors: true
                  authorizer: aws_iam
    create:
        handler: create.main
        events:
            - http:
                  path: notes
                  method: POST
                  cors: true
                  authorizer: aws_iam
    get:
        handler: get.main
        events:
            - hhtp:
                  path: notes/{id}
                  method: GET
                  cors: true
                  authorizer: aws_iam
    update:
        handler: update.main
        events:
            - http:
                  path: notes/{id}
                  method: put
                  cors: true
                  authorizer: aws_iam
    delete:
        handler: delete.main
        events:
            - http:
              path: notes/{id}
              method: delete
              cors: true
              authorizer: aws_iam
    billing:
        handler: billing.main
        events:
            - http:
                  path: billing
                  method: post
                  cors: true
                  authorizer: aws_iam

resources:
    - ${file(resources/api-gateway-errors.yml)}
